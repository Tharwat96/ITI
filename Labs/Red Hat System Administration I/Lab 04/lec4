Process
-A process is a program in execution.
-Every program you run creates a process.
For Example
-----------
-Shell
-Command
-An application

Every processes has a PID
---------------------------
When a process creates another, the first is the
(parent) of the new process. The new process is
called the (child process).
-Parent waits for herchild to finish.

ls -R /


-systemd : parent process of all other processes
 
kill parent 



ps: process status
ps : report a snapshot of the current processes
ps displays information about a selection of the active processes. 

ps aux 
a: all processes attached to a terminal.
u: user list - userID or name 
x: all other processes


1)USER      
process owner
2)PID
3)%CPU
4)%MEM
5)VSZ: virtual shared memory
6)RSS: Resistant memory 
7)TTY: shell
8)START: 
9)TIME: the total processing time since the process started
10)command: systemd

[process] kernel 

running process  /proc  directory 

ps aux | grep no.
ps aux | grep -i name
ps aux | grep vim

to display parent PID
------------------------
ps -l : to display parent PID (PPID)
ps -ef : 
e: Select all processes.
f: full-format listing.

UID | PID | PPID | c | STIME | TTY | TIME | CMD


pstree : process status tree
ps fax

-------------------------------------------------
top: display linux processs 
The top program provides a dynamic real-time view of a running system.
It can display system summary information as well as alist of processes
or threads currently being managed the linux kernel.

top 
1  to show all cpu cores
s  to change the default refresh rate which is 3 sec.
k  to kill a process
r  renice a process
n  to change the number of processes shown.
w  to save current display configuration.
q  to quit


gnome-system-monitor 
Application  system tools system monitor

-----------------------------------------------
System starts processes called daemons which
are processes that run in the background and
provide services.

sleep 500
ctrl z to stop process 
[4]+  Stopped                 sleep 500


sleep 500 &
[5] 28943

job id   process id 

fg %5
ctrl z

bg %5

jobs

ctrl c  terminate
---------------------------------------------
fg to terminate type ctrl c
bg to terminate sind signal 


A signal is a message sent to a process to perform
a certain action.

stop, term , kill

to send a signal use kill command

kill [-signal] PIDs
the command kill sends the specified signal to the specified process or process group.
If no signal specified, the TERM signal is sent.


man 7 signal
man -s7 signal



SIGTERM      15       Term    Termination signal
SIGSTOP   17,19,23    Stop    Stop process
SIGKILL       9       Term    Kill signal
SIGCONT   19,18,25    Cont    Continue if stopped

kill -SIGKILL %1
     -KILL

pkill [-signal] processname
pkill  -9 vim
killall vim

------------------------------------------------
-Only process at a time may be executed on the CPU.
-Every process which is ready to run has a scheduling priority.

-The Linux process divides CPU time into time slices, in which each process will get a turn to run,higher priority processes first.
-User can affect the priority by setting the niceness
value for a process.

-------------------------------------------------------
Niceness values range from -20 to +19, which
indicates how much of a bonus or penalty to
assign to the priority of the process.
---------------------------------------------------------
Most processes run with a niceness value of 0 (no
change).
---------------------------------------------------------
Smaller numbers are higher priority. Processes
with a higher priority will run first in each time
slice, and will run longer before its turn to run
ends.

Users can adjust this value down as far as +19 but
can not increase it. Root can increase the priority
of a process as high as -20


-------------------------------------------
nice -n 20 command 

renice -n 17 -p PID -u user
 renice -n 17 -p pID
 renice -n 18 -u fatma

top 
r : renice 
-------------------------------------
searching for a process
pgrep [-option] pattern 
-x: exact match
-u uid: processes for a specific user
-l: display the name with pid


pgrep ht
pgrep -l ht
pgrep -l -x httpd
pgrep -u uid 
pgrep -l -u uid

---------------------------------------------------
standard input      keyboard
standard output     screen 
standard error      screen

input -> command -> output & error

Redirection
> output redirection
>> output redirection

ls -l /home/fatma/cloud > file.txt
ls -l /home/fatma > file.txt
ls -l /home/fatma >> file.txt

ls -lR / 2> /dev/null

2> error redirection
&> output and error 

------------------------------------------------
< input redirection

mail < file.txt
--------------------------------

pipe line

command 1 | command 2
        buffer
         input to command 2

history | more
ps aux | more 

display lines from 5 to 10 of /etc/passwd file

head -n10 /etc/passwd | tail -6


ls | wc -l 
--------------------------------------------------------
tee 
The tee command reads from the standard input and
writes to the standard output and a file.

ls -lR / | tee fname | more 

----------------------------------------------
wc - print newline, word, and byte counts for each file

diff f1 f2
------------------------------------------------------
grep, egrep, fgrep - print lines matching a pattern
-using regular expression

grep fatma /etc/passwd
grep ^f /etc/passwd 
grep ^h /etc/passwd
grep ^root /etc/passwd
grep t$ /etc/passwd
grep ^fatma$ /etc/passwd
-i to ignore case sensitive 
-n print line number 

grep -r fatma /etc    
     -rl 

grep -e ^f -e ^r /etc/passwd

grep ^r.ot /etc/passwd
grep r.ot /etc/passwd

grep ^user[1-9] /etc/passwd


ps aux | grep ftp 
ps aux | grep httpd

--------------------------------------------------
cut 
cut command cuts fields or columns of text from standard
input or the named file and displays the result to standard
output.

cut -f1,5 -d: /etc/passwd
cut -f1,5 -d: /etc/passwd | grep fatma

loginname:x:uid:gid:comment:homedirectory:loginshell

cut -f1,5 -d: /etc/passwd | grep ^a | sort
---------------------------------------------------------
The sort command sorts text data after accepting it from
either a file or the output of another command.

The sorted text is sent to the standard output, with the
original file remaining unchanged in the process.

sort -k1 -t: /etc/passwd



-----------------------------------------------------------
The tr command can be used to translate characters from
standard input and write to standard output

tr 
echo hello world | tr a-z A-Z

echo hello world | tr [:lower:] [:upper:]





















