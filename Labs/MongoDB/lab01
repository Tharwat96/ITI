2. db.help()
3. 
    db
    show dbs
4.  use Facebook
5.  
> db.createCollection("posts")
6. 

db.createCollection("users", 
    {capped:true, size:5242880, max:10, validator:
        {$and:
            [{username:{$type:"string"}},
            {email:{$regex:/@gmail\.com$/}}
            ]
        }
    }
)

db.createCollection( "contacts",
   { validator: { $or:
      [
         { phone: { $type: "string" } },
         { email: { $regex: /@mongodb\.com$/ } },
         { status: { $in: [ "Unknown", "Incomplete" ] } }
      ]
   }
} )

7. 

for(let i = 2; i<22; i++){
    db.posts.insert({_id:i, "username": "Mohamed", "name":`post${i}`, "likes":`${i}`, "comments": i})
}

db.posts.insert({_id:50, "username": "Ahmed", "name":"post50", "likes": 16, "comments": "yest"})


8. 

for(let i = 2; i<22; i++){
    db.users.insert({_id:i, "username":`user${i}`, "email":`ahmed${i}@gmail.com`})
}

9. 

db.user.find()

10.

db.posts.insert({_id:50, "username": "Ahmed", "name":"post50", "likes": 16, "comments": "yest"})


db.posts.insert({_id:50, "username": "Mohamed", "name":"post50", "likes": 16, "comments": "yest"})


db.posts.find({"username":"Mohamed"},{})

11.

db.posts.update({username:{$eq:"Mohamed"}},{$set:{likes:10000}},{multi:true})


12. 

db.posts.remove({username:"Mohamed"})

19.

mongorestore --db Inventory ~/Desktop/Inventory

20. 

/*Select products with price less than 1000 or greater than 5000. */

db.products.find( { $or: [ { price: { $lt: 1000 } }, { price: { $gt:5000 } } ] }, {})

21.

/* Select products where name field contains at least one element that
starts with LG , To ,Sa. */

db.products.find( { name: { $in: [ /^LG/, /^To/, /^Sa/ ] } }, {})

22. 

/**)Select products where the stock field value is an array and should
contain numbers 99 , 999. */

db.products.find( { stock: { $all: [ 99, 999 ] } }, {} ).pretty()

23. ??

/**Select products with stock field contains value is greater than 99. */

db.products.find( { stock: { elemMatch: { $gt: 99 } } }, {} ).pretty()

24.

/**Select products where stock field contains 3 elements. */

db.products.find( { stock: { $size: 3 } }, {} ).pretty()

25. 

/**Select products where vendor is not Apple , Sony, LG or HP. */

db.products.find( { vendor: { $nin: [ 'Apple', 'Sony', 'LG', 'HP'] } },{} ).pretty()

26.

/**Select products where the price field is not exists. */

db.products.find( { price: { $exists: false } }, {} ).pretty()